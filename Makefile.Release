#############################################################################
# Makefile for building: sensbli
# Generated by qmake (2.01a) (Qt 4.5.2) on: Do 5. Nov 19:31:10 2009
# Project:  sensbli.pro
# Template: app
#############################################################################

####### Compiler, tools and options

CC            = gcc
CXX           = g++
DEFINES       = -DUNICODE -DQT_LARGEFILE_SUPPORT -DQT_DLL -DQT_NO_DEBUG -DQT_SVG_LIB -DQT_XMLPATTERNS_LIB -DQT_XML_LIB -DQT_GUI_LIB -DQT_NETWORK_LIB -DQT_CORE_LIB -DQT_THREAD_SUPPORT -DQT_NEEDS_QMAIN
CFLAGS        = -O2 -Wall $(DEFINES)
CXXFLAGS      = -O2 -frtti -fexceptions -mthreads -Wall $(DEFINES)
INCPATH       = -I'../../../../Qt/2009.03/qt/include/QtCore' -I'../../../../Qt/2009.03/qt/include/QtNetwork' -I'../../../../Qt/2009.03/qt/include/QtGui' -I'../../../../Qt/2009.03/qt/include/QtXml' -I'../../../../Qt/2009.03/qt/include/QtXmlPatterns' -I'../../../../Qt/2009.03/qt/include/QtSvg' -I'../../../../Qt/2009.03/qt/include' -I'../../../../OpenCV11/cv/include' -I'../../../../OpenCV11/cvaux/include' -I'../../../../OpenCV11/cxcore/include' -I'../../../../OpenCV11/otherlibs/highgui' -I'../../../../Qt/2009.03/qt/include/ActiveQt' -I'release' -I'.' -I'../../../../Qt/2009.03/qt/mkspecs/default'
LINK        =        g++
LFLAGS        =        -enable-stdcall-fixup -Wl,-enable-auto-import -Wl,-enable-runtime-pseudo-reloc -Wl,-s -mthreads -Wl -Wl,-subsystem,windows
LIBS        =        -L'c:/Qt/2009.03/qt/lib' -lmingw32 -lqtmain release/sensbli_res.o -Lc:\OpenCV11\lib -lcv -lcxcore -lhighgui -lQtSvg4 -lQtXmlPatterns4 -lQtXml4 -lQtGui4 -lQtNetwork4 -lQtCore4
QMAKE         = c:/Qt/2009.03/qt/bin/qmake
IDC           = c:/Qt/2009.03/qt/bin/idc.exe
IDL           = midl
ZIP           = zip -r -9
DEF_FILE      = 
RES_FILE      = release/sensbli_res.o
COPY          = cp
COPY_FILE     = $(COPY)
COPY_DIR      = xcopy /s /q /y /i
DEL_FILE      = rm
DEL_DIR       = rmdir
MOVE          = mv
CHK_DIR_EXISTS= test -d
MKDIR         = mkdir
INSTALL_FILE    = $(COPY_FILE)
INSTALL_PROGRAM = $(COPY_FILE)
INSTALL_DIR     = $(COPY_DIR)

####### Output directory

OBJECTS_DIR   = release/

####### Files

SOURCES       = blinksensor/CRecordProcessor.cpp \
		recording.cpp \
		calibview.cpp \
		setup.cpp \
		blinksensor/CBlinkProcessor.cpp \
		blinksensor/CBlinkSensorDebugger.cpp \
		blinksensor/CCalibProcessor.cpp \
		blinksensor/CFrameProcessor.cpp \
		bloblib/Blob.cpp \
		bloblib/BlobExtraction.cpp \
		bloblib/BlobResult.cpp \
		cvlib/cvlib.cpp \
		eyefinder/CBlobPair.cpp \
		eyefinder/CEyeFinder.cpp \
		eyestatehandler/CEyeStateHandler.cpp \
		eyetracker/CEyeTracker.cpp \
		imagedb/CImageDB.cpp \
		QOpenCVWidget.cpp \
		main.cpp \
		sensbli.cpp release/moc_CRecordProcessor.cpp \
		release/moc_recording.cpp \
		release/moc_calibview.cpp \
		release/moc_setup.cpp \
		release/moc_CBlinkProcessor.cpp \
		release/moc_CCalibProcessor.cpp \
		release/moc_CFrameProcessor.cpp \
		release/moc_CEyeStateHandler.cpp \
		release/moc_sensbli.cpp \
		release/qrc_sensbli.cpp
OBJECTS       = release/CRecordProcessor.o \
		release/recording.o \
		release/calibview.o \
		release/setup.o \
		release/CBlinkProcessor.o \
		release/CBlinkSensorDebugger.o \
		release/CCalibProcessor.o \
		release/CFrameProcessor.o \
		release/Blob.o \
		release/BlobExtraction.o \
		release/BlobResult.o \
		release/cvlib.o \
		release/CBlobPair.o \
		release/CEyeFinder.o \
		release/CEyeStateHandler.o \
		release/CEyeTracker.o \
		release/CImageDB.o \
		release/QOpenCVWidget.o \
		release/main.o \
		release/sensbli.o \
		release/moc_CRecordProcessor.o \
		release/moc_recording.o \
		release/moc_calibview.o \
		release/moc_setup.o \
		release/moc_CBlinkProcessor.o \
		release/moc_CCalibProcessor.o \
		release/moc_CFrameProcessor.o \
		release/moc_CEyeStateHandler.o \
		release/moc_sensbli.o \
		release/qrc_sensbli.o
DIST          = 
QMAKE_TARGET  = sensbli
DESTDIR        = release/ #avoid trailing-slash linebreak
TARGET         = sensbli.exe
DESTDIR_TARGET = release/sensbli.exe

####### Implicit rules

.SUFFIXES: .cpp .cc .cxx .c

.cpp.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cc.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.cxx.o:
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o $@ $<

.c.o:
	$(CC) -c $(CFLAGS) $(INCPATH) -o $@ $<

####### Build rules

first: all
all: Makefile.Release  $(DESTDIR_TARGET)

$(DESTDIR_TARGET): ui_recording.h ui_calibview.h ui_setup.h ui_sensbli.h $(OBJECTS) release/sensbli_res.o
	$(LINK) $(LFLAGS) -o $(DESTDIR_TARGET) object_script.sensbli.Release  $(LIBS)


release/sensbli_res.o: sensbli.rc
	windres -i sensbli.rc -o release/sensbli_res.o --include-dir=.

qmake:  FORCE
	@$(QMAKE) -win32 -o Makefile.Release sensbli.pro

dist:
	$(ZIP) sensbli.zip $(SOURCES) $(DIST) sensbli.pro ../../../../Qt/2009.03/qt/mkspecs/qconfig.pri ../../../../Qt/2009.03/qt/mkspecs/features/qt_functions.prf ../../../../Qt/2009.03/qt/mkspecs/features/qt_config.prf ../../../../Qt/2009.03/qt/mkspecs/features/exclusive_builds.prf ../../../../Qt/2009.03/qt/mkspecs/features/default_pre.prf ../../../../Qt/2009.03/qt/mkspecs/features/win32/default_pre.prf ../../../../Qt/2009.03/qt/mkspecs/features/release.prf ../../../../Qt/2009.03/qt/mkspecs/features/debug_and_release.prf ../../../../Qt/2009.03/qt/mkspecs/features/default_post.prf ../../../../Qt/2009.03/qt/mkspecs/features/win32/default_post.prf ../../../../Qt/2009.03/qt/mkspecs/features/build_pass.prf ../../../../Qt/2009.03/qt/mkspecs/features/win32/rtti.prf ../../../../Qt/2009.03/qt/mkspecs/features/win32/exceptions.prf ../../../../Qt/2009.03/qt/mkspecs/features/win32/stl.prf ../../../../Qt/2009.03/qt/mkspecs/features/shared.prf ../../../../Qt/2009.03/qt/mkspecs/features/warn_on.prf ../../../../Qt/2009.03/qt/mkspecs/features/qt.prf ../../../../Qt/2009.03/qt/mkspecs/features/win32/thread.prf ../../../../Qt/2009.03/qt/mkspecs/features/moc.prf ../../../../Qt/2009.03/qt/mkspecs/features/win32/windows.prf ../../../../Qt/2009.03/qt/mkspecs/features/resources.prf ../../../../Qt/2009.03/qt/mkspecs/features/uic.prf ../../../../Qt/2009.03/qt/mkspecs/features/yacc.prf ../../../../Qt/2009.03/qt/mkspecs/features/lex.prf ../../../../Qt/2009.03/qt/mkspecs/features/include_source_dir.prf c:\Qt\2009.03\qt\lib\qtmain.prl sensbli_de.ts sensbli_de.ts HEADERS RESOURCES IMAGES SOURCES OBJECTIVE_SOURCES FORMS YACCSOURCES YACCSOURCES LEXSOURCES 

clean: compiler_clean 
	-$(DEL_FILE) release/CRecordProcessor.o release/recording.o release/calibview.o release/setup.o release/CBlinkProcessor.o release/CBlinkSensorDebugger.o release/CCalibProcessor.o release/CFrameProcessor.o release/Blob.o release/BlobExtraction.o release/BlobResult.o release/cvlib.o release/CBlobPair.o release/CEyeFinder.o release/CEyeStateHandler.o release/CEyeTracker.o release/CImageDB.o release/QOpenCVWidget.o release/main.o release/sensbli.o release/moc_CRecordProcessor.o release/moc_recording.o release/moc_calibview.o release/moc_setup.o release/moc_CBlinkProcessor.o release/moc_CCalibProcessor.o release/moc_CFrameProcessor.o release/moc_CEyeStateHandler.o release/moc_sensbli.o release/qrc_sensbli.o
	-$(DEL_FILE) release/sensbli_res.o

distclean: clean
	-$(DEL_FILE) $(DESTDIR_TARGET)
	-$(DEL_FILE) Makefile.Release

mocclean: compiler_moc_header_clean compiler_moc_source_clean

mocables: compiler_moc_header_make_all compiler_moc_source_make_all

compiler_moc_header_make_all: release/moc_CRecordProcessor.cpp release/moc_recording.cpp release/moc_calibview.cpp release/moc_setup.cpp release/moc_CBlinkProcessor.cpp release/moc_CCalibProcessor.cpp release/moc_CFrameProcessor.cpp release/moc_CEyeStateHandler.cpp release/moc_sensbli.cpp
compiler_moc_header_clean:
	-$(DEL_FILE) release/moc_CRecordProcessor.cpp release/moc_recording.cpp release/moc_calibview.cpp release/moc_setup.cpp release/moc_CBlinkProcessor.cpp release/moc_CCalibProcessor.cpp release/moc_CFrameProcessor.cpp release/moc_CEyeStateHandler.cpp release/moc_sensbli.cpp
release/moc_CRecordProcessor.cpp: blinksensor/CFrameProcessor.h \
		imagedb/CImageDB.h \
		config.h \
		blinksensor/CRecordProcessor.h
	C:/Qt/2009.03/qt/bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 blinksensor/CRecordProcessor.h -o release/moc_CRecordProcessor.cpp

release/moc_recording.cpp: ui_recording.h \
		recording.h
	C:/Qt/2009.03/qt/bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 recording.h -o release/moc_recording.cpp

release/moc_calibview.cpp: ui_calibview.h \
		calibview.h
	C:/Qt/2009.03/qt/bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 calibview.h -o release/moc_calibview.cpp

release/moc_setup.cpp: ui_setup.h \
		setup.h
	C:/Qt/2009.03/qt/bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 setup.h -o release/moc_setup.cpp

release/moc_CBlinkProcessor.cpp: blinksensor/CFrameProcessor.h \
		imagedb/CImageDB.h \
		config.h \
		eyefinder/CEyeFinder.h \
		bloblib/BlobResult.h \
		bloblib/BlobLibraryConfiguration.h \
		bloblib/Blob.h \
		eyefinder/ovroi.h \
		eyetracker/CEyeTracker.h \
		eyestatehandler/CEyeStateHandler.h \
		blinksensor/CBlinkSensorDebugger.h \
		eyefinder/CBlobPair.h \
		blinksensor/CBlinkProcessor.h
	C:/Qt/2009.03/qt/bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 blinksensor/CBlinkProcessor.h -o release/moc_CBlinkProcessor.cpp

release/moc_CCalibProcessor.cpp: blinksensor/CFrameProcessor.h \
		imagedb/CImageDB.h \
		config.h \
		blinksensor/CCalibProcessor.h
	C:/Qt/2009.03/qt/bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 blinksensor/CCalibProcessor.h -o release/moc_CCalibProcessor.cpp

release/moc_CFrameProcessor.cpp: imagedb/CImageDB.h \
		config.h \
		blinksensor/CFrameProcessor.h
	C:/Qt/2009.03/qt/bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 blinksensor/CFrameProcessor.h -o release/moc_CFrameProcessor.cpp

release/moc_CEyeStateHandler.cpp: config.h \
		eyestatehandler/CEyeStateHandler.h
	C:/Qt/2009.03/qt/bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 eyestatehandler/CEyeStateHandler.h -o release/moc_CEyeStateHandler.cpp

release/moc_sensbli.cpp: ui_sensbli.h \
		QOpenCVWidget.h \
		calibview.h \
		ui_calibview.h \
		recording.h \
		ui_recording.h \
		setup.h \
		ui_setup.h \
		blinksensor/CFrameProcessor.h \
		imagedb/CImageDB.h \
		config.h \
		blinksensor/CCalibProcessor.h \
		blinksensor/CBlinkProcessor.h \
		eyefinder/CEyeFinder.h \
		bloblib/BlobResult.h \
		bloblib/BlobLibraryConfiguration.h \
		bloblib/Blob.h \
		eyefinder/ovroi.h \
		eyetracker/CEyeTracker.h \
		eyestatehandler/CEyeStateHandler.h \
		blinksensor/CBlinkSensorDebugger.h \
		eyefinder/CBlobPair.h \
		blinksensor/CRecordProcessor.h \
		sensbli.h
	C:/Qt/2009.03/qt/bin/moc.exe $(DEFINES) $(INCPATH) -D__GNUC__ -DWIN32 sensbli.h -o release/moc_sensbli.cpp

compiler_rcc_make_all: release/qrc_sensbli.cpp
compiler_rcc_clean:
	-$(DEL_FILE) release/qrc_sensbli.cpp
release/qrc_sensbli.cpp: sensbli.qrc \
		icons/testpattern.svg \
		icons/cartoon_eye.svg
	c:/Qt/2009.03/qt/bin/rcc.exe -name sensbli sensbli.qrc -o release/qrc_sensbli.cpp

compiler_image_collection_make_all: qmake_image_collection.cpp
compiler_image_collection_clean:
	-$(DEL_FILE) qmake_image_collection.cpp
compiler_moc_source_make_all:
compiler_moc_source_clean:
compiler_uic_make_all: ui_recording.h ui_calibview.h ui_setup.h ui_sensbli.h
compiler_uic_clean:
	-$(DEL_FILE) ui_recording.h ui_calibview.h ui_setup.h ui_sensbli.h
ui_recording.h: recording.ui
	c:/Qt/2009.03/qt/bin/uic.exe recording.ui -o ui_recording.h

ui_calibview.h: calibview.ui
	c:/Qt/2009.03/qt/bin/uic.exe calibview.ui -o ui_calibview.h

ui_setup.h: setup.ui
	c:/Qt/2009.03/qt/bin/uic.exe setup.ui -o ui_setup.h

ui_sensbli.h: sensbli.ui
	c:/Qt/2009.03/qt/bin/uic.exe sensbli.ui -o ui_sensbli.h

compiler_yacc_decl_make_all:
compiler_yacc_decl_clean:
compiler_yacc_impl_make_all:
compiler_yacc_impl_clean:
compiler_lex_make_all:
compiler_lex_clean:
compiler_clean: compiler_moc_header_clean compiler_rcc_clean compiler_uic_clean 



####### Compile

release/CRecordProcessor.o: blinksensor/CRecordProcessor.cpp config.h \
		blinksensor/CRecordProcessor.h \
		blinksensor/CFrameProcessor.h \
		imagedb/CImageDB.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/CRecordProcessor.o blinksensor/CRecordProcessor.cpp

release/recording.o: recording.cpp recording.h \
		ui_recording.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/recording.o recording.cpp

release/calibview.o: calibview.cpp calibview.h \
		ui_calibview.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/calibview.o calibview.cpp

release/setup.o: setup.cpp setup.h \
		ui_setup.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/setup.o setup.cpp

release/CBlinkProcessor.o: blinksensor/CBlinkProcessor.cpp config.h \
		blinksensor/CBlinkProcessor.h \
		blinksensor/CFrameProcessor.h \
		imagedb/CImageDB.h \
		eyefinder/CEyeFinder.h \
		bloblib/BlobResult.h \
		bloblib/BlobLibraryConfiguration.h \
		bloblib/Blob.h \
		eyefinder/ovroi.h \
		eyetracker/CEyeTracker.h \
		eyestatehandler/CEyeStateHandler.h \
		blinksensor/CBlinkSensorDebugger.h \
		eyefinder/CBlobPair.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/CBlinkProcessor.o blinksensor/CBlinkProcessor.cpp

release/CBlinkSensorDebugger.o: blinksensor/CBlinkSensorDebugger.cpp blinksensor/CBlinkSensorDebugger.h \
		imagedb/CImageDB.h \
		config.h \
		bloblib/BlobResult.h \
		bloblib/BlobLibraryConfiguration.h \
		bloblib/Blob.h \
		eyefinder/CBlobPair.h \
		eyefinder/ovroi.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/CBlinkSensorDebugger.o blinksensor/CBlinkSensorDebugger.cpp

release/CCalibProcessor.o: blinksensor/CCalibProcessor.cpp config.h \
		blinksensor/CCalibProcessor.h \
		blinksensor/CFrameProcessor.h \
		imagedb/CImageDB.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/CCalibProcessor.o blinksensor/CCalibProcessor.cpp

release/CFrameProcessor.o: blinksensor/CFrameProcessor.cpp blinksensor/CFrameProcessor.h \
		imagedb/CImageDB.h \
		config.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/CFrameProcessor.o blinksensor/CFrameProcessor.cpp

release/Blob.o: bloblib/Blob.cpp bloblib/Blob.h \
		bloblib/BlobLibraryConfiguration.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/Blob.o bloblib/Blob.cpp

release/BlobExtraction.o: bloblib/BlobExtraction.cpp bloblib/BlobResult.h \
		bloblib/BlobLibraryConfiguration.h \
		bloblib/Blob.h \
		bloblib/BlobExtraction.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/BlobExtraction.o bloblib/BlobExtraction.cpp

release/BlobResult.o: bloblib/BlobResult.cpp bloblib/BlobResult.h \
		bloblib/BlobLibraryConfiguration.h \
		bloblib/Blob.h \
		bloblib/BlobExtraction.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/BlobResult.o bloblib/BlobResult.cpp

release/cvlib.o: cvlib/cvlib.cpp cvlib/cvlib.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/cvlib.o cvlib/cvlib.cpp

release/CBlobPair.o: eyefinder/CBlobPair.cpp eyefinder/CBlobPair.h \
		bloblib/Blob.h \
		bloblib/BlobLibraryConfiguration.h \
		eyefinder/ovroi.h \
		config.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/CBlobPair.o eyefinder/CBlobPair.cpp

release/CEyeFinder.o: eyefinder/CEyeFinder.cpp blinksensor/CBlinkSensorDebugger.h \
		imagedb/CImageDB.h \
		config.h \
		bloblib/BlobResult.h \
		bloblib/BlobLibraryConfiguration.h \
		bloblib/Blob.h \
		eyefinder/CBlobPair.h \
		eyefinder/ovroi.h \
		eyefinder/CEyeFinder.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/CEyeFinder.o eyefinder/CEyeFinder.cpp

release/CEyeStateHandler.o: eyestatehandler/CEyeStateHandler.cpp eyestatehandler/CEyeStateHandler.h \
		config.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/CEyeStateHandler.o eyestatehandler/CEyeStateHandler.cpp

release/CEyeTracker.o: eyetracker/CEyeTracker.cpp eyetracker/CEyeTracker.h \
		imagedb/CImageDB.h \
		config.h \
		eyefinder/CEyeFinder.h \
		bloblib/BlobResult.h \
		bloblib/BlobLibraryConfiguration.h \
		bloblib/Blob.h \
		eyefinder/ovroi.h \
		blinksensor/CBlinkSensorDebugger.h \
		eyefinder/CBlobPair.h \
		cvlib/cvlib.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/CEyeTracker.o eyetracker/CEyeTracker.cpp

release/CImageDB.o: imagedb/CImageDB.cpp imagedb/CImageDB.h \
		config.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/CImageDB.o imagedb/CImageDB.cpp

release/QOpenCVWidget.o: QOpenCVWidget.cpp QOpenCVWidget.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/QOpenCVWidget.o QOpenCVWidget.cpp

release/main.o: main.cpp sensbli.h \
		ui_sensbli.h \
		QOpenCVWidget.h \
		calibview.h \
		ui_calibview.h \
		recording.h \
		ui_recording.h \
		setup.h \
		ui_setup.h \
		blinksensor/CFrameProcessor.h \
		imagedb/CImageDB.h \
		config.h \
		blinksensor/CCalibProcessor.h \
		blinksensor/CBlinkProcessor.h \
		eyefinder/CEyeFinder.h \
		bloblib/BlobResult.h \
		bloblib/BlobLibraryConfiguration.h \
		bloblib/Blob.h \
		eyefinder/ovroi.h \
		eyetracker/CEyeTracker.h \
		eyestatehandler/CEyeStateHandler.h \
		blinksensor/CBlinkSensorDebugger.h \
		eyefinder/CBlobPair.h \
		blinksensor/CRecordProcessor.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/main.o main.cpp

release/sensbli.o: sensbli.cpp sensbli.h \
		ui_sensbli.h \
		QOpenCVWidget.h \
		calibview.h \
		ui_calibview.h \
		recording.h \
		ui_recording.h \
		setup.h \
		ui_setup.h \
		blinksensor/CFrameProcessor.h \
		imagedb/CImageDB.h \
		config.h \
		blinksensor/CCalibProcessor.h \
		blinksensor/CBlinkProcessor.h \
		eyefinder/CEyeFinder.h \
		bloblib/BlobResult.h \
		bloblib/BlobLibraryConfiguration.h \
		bloblib/Blob.h \
		eyefinder/ovroi.h \
		eyetracker/CEyeTracker.h \
		eyestatehandler/CEyeStateHandler.h \
		blinksensor/CBlinkSensorDebugger.h \
		eyefinder/CBlobPair.h \
		blinksensor/CRecordProcessor.h
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/sensbli.o sensbli.cpp

release/moc_CRecordProcessor.o: release/moc_CRecordProcessor.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/moc_CRecordProcessor.o release/moc_CRecordProcessor.cpp

release/moc_recording.o: release/moc_recording.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/moc_recording.o release/moc_recording.cpp

release/moc_calibview.o: release/moc_calibview.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/moc_calibview.o release/moc_calibview.cpp

release/moc_setup.o: release/moc_setup.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/moc_setup.o release/moc_setup.cpp

release/moc_CBlinkProcessor.o: release/moc_CBlinkProcessor.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/moc_CBlinkProcessor.o release/moc_CBlinkProcessor.cpp

release/moc_CCalibProcessor.o: release/moc_CCalibProcessor.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/moc_CCalibProcessor.o release/moc_CCalibProcessor.cpp

release/moc_CFrameProcessor.o: release/moc_CFrameProcessor.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/moc_CFrameProcessor.o release/moc_CFrameProcessor.cpp

release/moc_CEyeStateHandler.o: release/moc_CEyeStateHandler.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/moc_CEyeStateHandler.o release/moc_CEyeStateHandler.cpp

release/moc_sensbli.o: release/moc_sensbli.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/moc_sensbli.o release/moc_sensbli.cpp

release/qrc_sensbli.o: release/qrc_sensbli.cpp 
	$(CXX) -c $(CXXFLAGS) $(INCPATH) -o release/qrc_sensbli.o release/qrc_sensbli.cpp

####### Install

install:   FORCE

uninstall:   FORCE

FORCE:

